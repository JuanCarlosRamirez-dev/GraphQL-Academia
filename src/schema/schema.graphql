"Consultas de la información de los estudiantes y cursos. Solo lectura"
type Query {
  "Lista de los estudiantes"
  estudiantes: [Estudiante!]!
  "Informacion de un estudiante seleccionado por ID"
  estudiante(id: ID!): Estudiante!
  "Lista de los cursos de la academia"
  cursos: [Curso!]!
  "Informacion de un curso seleccionado por ID"
  curso(curso: ID!): Curso!
}

"Operaciones para añadir, editar o eliminar información"
type Mutation {
  "Opción para añadir la información de un nuevo curso"
  cursoNuevo(curso: CursoInput!): Curso!
  "Opción para modificar / actualizar la información de un curso seleccionado"
  modificarCurso(curso: CursoInput!): Curso!
  "Opción para eliminar / borrar la información de un curso seleccionado mediante el ID"
  eliminarCurso(id: ID!): Curso!
}

"""
Información de entrada para gestionar los datos de un curso, como puede ser añadir
y/o modificar los datos de un curso
"""
input CursoInput {
  id: ID
  title: String!
  description: String!
  clases: Int!
  time: Float!
  logo: String!
  level: Nivel = TODOS
  path: String!
  teacher: String!
}

"Informacion de los estudiantes"
type Estudiante {
  id: ID!
  name: String!
  email: String!
  website: String
  courses: [Curso!]!
}

"Informacion de un curso"
type Curso {
  id: ID!
  title: String!
  description: String!
  clases: Int!
  time: Float!
  logo: String!
  level: Nivel!
  path: String!
  teacher: String!
  students: [Estudiante]
  reviews: [Valoracion!]!
}

"Nivel de los cursos"
enum Nivel {
  TODOS
  NOVATOS
  INTERMEDIO
  EXPERTO
}

"Valoraciones de los cursos"
type Valoracion {
  id: ID!
  name: String!
  points: Float!
  comments: String
}
